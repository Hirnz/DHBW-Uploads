~~~~~~~~~
SEARCHING
~~~~~~~~~
inear search for random title, artist or album:
0.002030
0.002000
0.002001
0.002001
0.002000
0.002000
0.002030
0.002001
0.002001
0.002030
----------------------------
linear search for random year:
0.001011
0.001001
0.001000
0.001000
0.001011
0.001000
0.001001
0.001000
0.001000
0.001001
------------------------------------------
binary search for random title:
0.005002
0.003035
0.003000
0.003001
0.003001
binary search for random artist:
0.005001
0.003030
0.003000
0.003001
0.003000
binary search for random album:
0.005002
0.003030
0.003007
0.003004
0.003004
binary search for random years and overrepresented years:
0.004501 <- random year
0.003001 <- random year
0.003001 <- random year
0.003501 <- 1999 (overrepresented in the dataset)
0.003449 <- 2000 (overrepresented in the dataset)
What is visualized clearly here: First search sorts by the category, continuous searches in the
same catgegory are faster, because the time of the seaches is not included anymore
The last two searches in the binary by year were 1999 and 2000, which are very strongly
reprsesented in the 10000 total entires. So there appears to be a correlation between
number of occurences and runtime!
------------------------------
~~~~~~~
SORTING
~~~~~~~
Insertion-Sort for random title, artist or album:
19.488443
18.108200
19.488442
18.943346
18.346242
Selection-Sort for random title, artist or album:
35.288235
36.876016
35.612293
36.891519
36.964033
Quick-Sort for random title, artist or album:
0.299053
0.327558
0.302054
0.293052
0.321556
-------------------------------
Insertion-Sort for random years:
10.717895
9.878745
10.452847
10.572368
9.820736
Selection-Sort for random years:
14.478058
14.450554
14.975145
14.626585
14.395044
Quick-Sort for random years:
0.058516
0.059011
0.057010
0.056009
0.057011
All sorts were performed in a way, that the library was randomized again before applying any 
sorting on any attribute, so that there is no presorted library that would not represent the
runtime of the sorting algorithms correctly!